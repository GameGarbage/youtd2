name: build-and-publish

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      - main
    # Sequence of patterns matched against refs/tags
    tags:        
      - v*

jobs:
  build_client:
    runs-on: ubuntu-latest
    name: build client
    steps:
    - name: Checkout
      uses: actions/checkout@v3.0.2
      with:
        fetch-depth: 0

    - name: Generate version for the build
      id: tag_hash
      run: |
        latest_tag=$(git describe --abbrev=0 --tags)
        short_hash=$(git rev-parse --short HEAD)
        echo "TAG_VERSION: ${latest_tag}-${short_hash}"
        echo "COMMIT_REF: $GITHUB_REF_NAME"
        echo "TAG_VERSION=${latest_tag}-${short_hash}" >> $GITHUB_ENV
        echo "COMMIT_REF=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT

    - name: Release requested?
      run: |
        if [[ ${{ steps.tag_version.outputs.COMMIT_REF }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]] ; then
            echo "COMMIT_REF=${{ steps.tag_version.outputs.COMMIT_REF }}" >> "$GITHUB_ENV"
            echo "NEED=true" >> "$GITHUB_ENV"
            echo 'true'
        else
            echo "NEED=false" >> "$GITHUB_ENV"
            echo 'false'
        fi

    - name: Update project.godot
      run: |
        project_godot_file="${{ github.workspace }}/project.godot"
        sed -i 's/\(config\/version="\).*\("\)/\1'"${TAG_VERSION}"'\2/' "${project_godot_file}"
        echo "New project.godot contents:"
        cat ${{ github.workspace }}/project.godot

    - name: Export game
      id: export
      uses: firebelley/godot-export@v5.0.0
      with:
        godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.0-stable/Godot_v4.0-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.0-stable/Godot_v4.0-stable_export_templates.tpz
        relative_project_path: ./
        verbose: true
        export_debug: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Copy required index.html assets
      run: |
        cp ${{ github.workspace }}/Build/Web/* ${{ steps.export.outputs.build_directory }}/Web/
        echo "Current state of Web dir:"
        ls ${{ steps.export.outputs.build_directory }}/Web/

    - uses: actions/upload-artifact@v3
      with:
        name: youtd-${{ env.TAG_VERSION }}
        path: ${{ steps.export.outputs.build_directory }}/Web/*

    outputs:
      tag_version: ${{ env.TAG_VERSION }}
      commit_ref: ${{ env.COMMIT_REF }}
      release_flag: ${{ env.NEED }}

  deploy_artifacts:
    runs-on: ubuntu-latest
    name: deploy artifacts to gh-pages
    needs: build_client
    steps:
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v3
      with:
        name: youtd-${{ needs.build_client.outputs.tag_version }}
        
    - name: Deploy to github pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .

  create_release:
      name: create release
      needs: build_client
      if: needs.build_client.outputs.release_flag == 'true'
      runs-on: ubuntu-latest
      steps:
        - name: Show props
          run: |
            echo "Commit ref: $GITHUB_REF_NAME"
            echo "Release tag: ${{ needs.build_client.outputs.commit_ref }}"
        - name: Release client
          uses: ncipollo/release-action@v1.11.2
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ needs.build_client.outputs.commit_ref }}
            generateReleaseNotes: true
            artifacts: ./*
